{"version":3,"sources":["app.jsx"],"names":["App","Component","constructor","props","theme","jss","componentDidMount","jssStyles","document","getElementById","parentNode","removeChild","render","registry","store","history","firebaseApp","initializeApp","result","window","__REDUX_STATE__","then"],"mappings":";AACA,8B;AACA,qC;;AAEA,mC;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA,wD;AACA;AACA,sD;AACA;;AAEA;;AAEA;AACA;AACA,kC;;AAEA;;;;mLAPA;AALA;AAPA;AAHA;AAHA;AA8Be,MAAMA,GAAN,SAAkB,gBAAMC,SAAxB,CAAkC,CAE/CC,YAAYC,KAAZ,EAAmB,CACjB,MAAMA,KAAN;AAEA;AACA,SAAKC,KAAL,GAAc,EAAd;;AAEA;AACA,SAAKC,GAAL,GAAW,iBAAO,iCAAP,CAAX;AACA;AACD;;AAEDC,sBAAoB;AAClB;AACA,UAAMC,YAAYC,SAASC,cAAT,CAAwB,iBAAxB,CAAlB;AACA,QAAIF,aAAaA,UAAUG,UAA3B,EAAuC;AACrCH,gBAAUG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACD;AACF;;AAEDK,WAAS;AACP;AACE,6DAAa,UAAU,KAAKT,KAAL,CAAWU,QAAlC,EAA4C,KAAK,KAAKR,GAAtD;AACI,8DAAU,OAAO,KAAKF,KAAL,CAAWW,KAA5B;AACE,6EAAiB,SAAS,KAAKX,KAAL,CAAWY,OAArC;AACE,iEADF,CADF,CADJ,CADF;;;;;AASD,GA/B8C,C,kBAA5Bf,G;;;AAkCrB;AA5CA;AAXA;AAwDA,sBAAe,CACb;AACA,QAAMgB,cAAc,cAASC,aAAT,CAAuB,uBAAeC,MAAtC,CAApB;AAEA;AACA,0CAAoBF,WAApB,EAAiC,WAAjC;;AAEA,QAAMH,WAAW,0BAAjB;AACA,QAAME,UAAU,oCAAhB;AACA,QAAMD,QAAQ,0BAAUC,OAAV,EAAmBC,WAAnB,EAAgCG,OAAOC,eAAvC,CAAd;;AAEA,oCAAcN,KAAd,EAAqBO,IAArB,CAA0B,MAAM;AAC9B;AACE,uBAAST,MAAT,CAAgB,8BAAC,GAAD,IAAK,UAAUC,QAAf,EAAyB,OAAOC,KAAhC,EAAuC,SAASC,OAAhD,GAAhB,EAA4EP,SAASC,cAAT,CAAwB,KAAxB,CAA5E;AACH,GAHD;AAID","file":"app.js","sourcesContent":["// React core.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Firebase.\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n// Redux.\nimport { Provider } from 'react-redux';\n\n// Router.\nimport { makeStore } from '@firebase-app/make-store';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerReducer, routerMiddleware } from 'react-router-redux';\n// JSS.\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport preset from 'jss-preset-default';\nimport { SheetsRegistry } from 'react-jss/lib/jss';\n// Other.\nimport { canUseDOM } from 'exenv';\n// Local.\nimport { whenAuthReady, keepIdTokenInCookie } from '@firebase-app/firebase-tools';\nimport { firebaseConfig } from '@firebase-app/config';\nimport Routes from './routes';\n\n/**\n * Loads the App in a server context.\n *\n * This takes care of setting up JSS, the Theme, Redux and the Router.\n */\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Create a theme instance.\n    this.theme =  {};\n\n    // Configure JSS\n    this.jss = create(preset());\n    //this.jss.options.createGenerateClassName = createGenerateClassName;\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.getElementById('jss-server-side');\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    return (\n      <JssProvider registry={this.props.registry} jss={this.jss}>\n          <Provider store={this.props.store}>\n            <ConnectedRouter history={this.props.history}>\n              <Routes/>\n            </ConnectedRouter>\n          </Provider>\n      </JssProvider>\n    );\n  }\n}\n\n// On the client, display the app.\nif (canUseDOM) {\n  // Instantiate a Firebase app.\n  const firebaseApp = firebase.initializeApp(firebaseConfig.result);\n\n  // Keep the Firebase ID Token and the __session cookie in sync.\n  keepIdTokenInCookie(firebaseApp, '__session');\n\n  const registry = new SheetsRegistry();\n  const history = createBrowserHistory();\n  const store = makeStore(history, firebaseApp, window.__REDUX_STATE__);\n  \n  whenAuthReady(store).then(() => {\n    // Render the app.\n      ReactDOM.render(<App registry={registry} store={store} history={history}/>, document.getElementById('app'));\n  });\n}\n"]}